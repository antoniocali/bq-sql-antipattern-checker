WITH raw_data AS (
SELECT
  project_id
  ,job_id
  ,labels
  ,error_result
  ,user_email
  ,reservation_id
  ,query
  ,creation_time
  ,end_time
  ,total_slot_ms
  ,total_bytes_processed
  ,job_type
  ,statement_type
  ,query_info
  ,sum(total_slot_ms) over(partition by project_id) as project_total_slot_ms
    from
`{query_project}.{region}.INFORMATION_SCHEMA.JOBS`
WHERE
    DATE(creation_time) = DATE({date})
    AND query IS NOT NULL
    AND (statement_type != "SCRIPT" OR statement_type IS NULL)
    AND total_slot_ms > 0
    AND query NOT LIKE '%BQ.REFRESH_MATERIALIZED_VIEW%'
{% if limit_row is defined %}
LIMIT {{ limit_row }}
{% endif %}
),
project_level_calculation as (
select
     *
     ,sum(total_slot_ms / project_total_slot_ms) over (partition by project_id
                                order by total_slot_ms desc
                                rows between unbounded preceding
                                                and current row) cumul_perc
    , row_number () over (partition by project_id order by total_slot_ms desc) rn
from raw_data
)
SELECT
    job_id
    ,project_id
    ,user_email
    ,reservation_id
    ,query
    ,creation_time creation_time
    ,DATE(creation_time) AS creation_date
    ,total_slot_ms
    ,1.0 * (TIMESTAMP_DIFF(end_time,creation_time,MINUTE)) total_duration_mins
    ,total_bytes_processed / (1024*1024*1024.0) AS total_process_gb
    ,total_slot_ms / (1000*60*60) AS total_slot_hrs
    ,job_type
    ,statement_type
FROM
    project_level_calculation
where
    round(cumul_perc,1) <= {cumul_perc}